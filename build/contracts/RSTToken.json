{
  "contractName": "RSTToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "standard",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040526040805190810160405280600981526020017f546f6b656e20302e310000000000000000000000000000000000000000000000815250600090805190602001906200005192919062000210565b506020604051908101604052806000815250600190805190602001906200007a92919062000210565b50602060405190810160405280600081525060029080519060200190620000a392919062000210565b506000600360006101000a81548160ff021916908360ff16021790555060006004556605543df729c000600755348015620000dd57600080fd5b506040805190810160405280601c81526020017f544553542052454741205269736b2053686172696e6720546f6b656e000000008152506040805190810160405280600581526020017f5253542d54000000000000000000000000000000000000000000000000000000815250600a600083511180156200015f575060008251115b15156200016b57600080fd5b82600190805190602001906200018392919062000210565b5081600290805190602001906200019c92919062000210565b5080600360006101000a81548160ff021916908360ff160217905550505050600754600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600754600481905550620002bf565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200025357805160ff191683800117855562000284565b8280016001018555821562000284579182015b828111156200028357825182559160200191906001019062000266565b5b50905062000293919062000297565b5090565b620002bc91905b80821115620002b85760008160009055506001016200029e565b5090565b90565b610e3a80620002cf6000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100b4578063095ea7b31461014457806318160ddd146101a957806323b872dd146101d45780632ff2e9dc14610259578063313ce567146102845780635a3b7e42146102b557806370a082311461034557806395d89b411461039c578063a9059cbb1461042c578063dd62ed3e14610491575b600080fd5b3480156100c057600080fd5b506100c9610508565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101095780820151818401526020810190506100ee565b50505050905090810190601f1680156101365780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015057600080fd5b5061018f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a6565b604051808215151515815260200191505060405180910390f35b3480156101b557600080fd5b506101be61076c565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b5061023f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610772565b604051808215151515815260200191505060405180910390f35b34801561026557600080fd5b5061026e610a7e565b6040518082815260200191505060405180910390f35b34801561029057600080fd5b50610299610a84565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102c157600080fd5b506102ca610a97565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561030a5780820151818401526020810190506102ef565b50505050905090810190601f1680156103375780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561035157600080fd5b50610386600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b35565b6040518082815260200191505060405180910390f35b3480156103a857600080fd5b506103b1610b4d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103f15780820151818401526020810190506103d6565b50505050905090810190601f16801561041e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561043857600080fd5b50610477600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610beb565b604051808215151515815260200191505060405180910390f35b34801561049d57600080fd5b506104f2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610db2565b6040518082815260200191505060405180910390f35b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561059e5780601f106105735761010080835404028352916020019161059e565b820191906000526020600020905b81548152906001019060200180831161058157829003601f168201915b505050505081565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156105e557600080fd5b600083148061067057506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b151561067b57600080fd5b82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a3600191505092915050565b60045481565b600083600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156107b157600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156107ee57600080fd5b610874600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485610dd7565b600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061093d600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485610dd7565b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109c9600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485610df0565b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a36001925050509392505050565b60075481565b600360009054906101000a900460ff1681565b60008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b2d5780601f10610b0257610100808354040283529160200191610b2d565b820191906000526020600020905b815481529060010190602001808311610b1057829003601f168201915b505050505081565b60056020528060005260406000206000915090505481565b60028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610be35780601f10610bb857610100808354040283529160200191610be3565b820191906000526020600020905b815481529060010190602001808311610bc657829003601f168201915b505050505081565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610c2a57600080fd5b610c73600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484610dd7565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610cff600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484610df0565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6006602052816000526040600020602052806000526040600020600091509150505481565b6000818310151515610de557fe5b818303905092915050565b6000808284019050838110151515610e0457fe5b80915050929150505600a165627a7a72305820b76d12002c9684352c7c2d443b880b6f8275728f736b210dae413bcd243ae5030029",
  "deployedBytecode": "0x6080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100b4578063095ea7b31461014457806318160ddd146101a957806323b872dd146101d45780632ff2e9dc14610259578063313ce567146102845780635a3b7e42146102b557806370a082311461034557806395d89b411461039c578063a9059cbb1461042c578063dd62ed3e14610491575b600080fd5b3480156100c057600080fd5b506100c9610508565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101095780820151818401526020810190506100ee565b50505050905090810190601f1680156101365780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015057600080fd5b5061018f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a6565b604051808215151515815260200191505060405180910390f35b3480156101b557600080fd5b506101be61076c565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b5061023f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610772565b604051808215151515815260200191505060405180910390f35b34801561026557600080fd5b5061026e610a7e565b6040518082815260200191505060405180910390f35b34801561029057600080fd5b50610299610a84565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102c157600080fd5b506102ca610a97565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561030a5780820151818401526020810190506102ef565b50505050905090810190601f1680156103375780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561035157600080fd5b50610386600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b35565b6040518082815260200191505060405180910390f35b3480156103a857600080fd5b506103b1610b4d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103f15780820151818401526020810190506103d6565b50505050905090810190601f16801561041e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561043857600080fd5b50610477600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610beb565b604051808215151515815260200191505060405180910390f35b34801561049d57600080fd5b506104f2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610db2565b6040518082815260200191505060405180910390f35b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561059e5780601f106105735761010080835404028352916020019161059e565b820191906000526020600020905b81548152906001019060200180831161058157829003601f168201915b505050505081565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156105e557600080fd5b600083148061067057506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b151561067b57600080fd5b82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a3600191505092915050565b60045481565b600083600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156107b157600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156107ee57600080fd5b610874600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485610dd7565b600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061093d600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485610dd7565b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109c9600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485610df0565b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a36001925050509392505050565b60075481565b600360009054906101000a900460ff1681565b60008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b2d5780601f10610b0257610100808354040283529160200191610b2d565b820191906000526020600020905b815481529060010190602001808311610b1057829003601f168201915b505050505081565b60056020528060005260406000206000915090505481565b60028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610be35780601f10610bb857610100808354040283529160200191610be3565b820191906000526020600020905b815481529060010190602001808311610bc657829003601f168201915b505050505081565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610c2a57600080fd5b610c73600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484610dd7565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610cff600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484610df0565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6006602052816000526040600020602052806000526040600020600091509150505481565b6000818310151515610de557fe5b818303905092915050565b6000808284019050838110151515610e0457fe5b80915050929150505600a165627a7a72305820b76d12002c9684352c7c2d443b880b6f8275728f736b210dae413bcd243ae5030029",
  "sourceMap": "54:273:11:-;;;182:36:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;224:23;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;253:25;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;308:1;284:25;;;;;;;;;;;;;;;;;;;;344:1;315:30;;121:16:11;92:45;;148:177;8:9:-1;5:2;;;30:1;27;20:12;5:2;148:177:11;828:241:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;220:2:11;934:1:3;918:5;912:19;:23;:52;;;;;963:1;945:7;939:21;:25;912:52;904:61;;;;;;;;1001:5;994:4;:12;;;;;;;;;;;;:::i;:::-;;1025:7;1016:6;:16;;;;;;;;;;;;:::i;:::-;;1053:9;1042:8;;:20;;;;;;;;;;;;;;;;;;828:241;;;266:14:11;;242:9;:21;252:10;242:21;;;;;;;;;;;;;;;:38;;;;304:14;;290:11;:28;;;;54:273;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "54:273:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;224:23:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;224:23:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;224:23:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3153:459;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3153:459:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;315:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;315:30:3;;;;;;;;;;;;;;;;;;;;;;;2036:447;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2036:447:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;92:45:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;92:45:11;;;;;;;;;;;;;;;;;;;;;;;284:25:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;182:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;182:36:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;182:36:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;351:45:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;253:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;253:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;253:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1351:329;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1351:329:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;402:66;;8:9:-1;5:2;;;30:1;27;20:12;5:2;402:66:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;224:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3153:459::-;3267:12;3240:8;452:1:18;432:22;;:8;:22;;;;424:31;;;;;;;;3438:1:3;3428:6;:11;:51;;;;3478:1;3443:9;:21;3453:10;3443:21;;;;;;;;;;;;;;;:31;3465:8;3443:31;;;;;;;;;;;;;;;;:36;3428:51;3420:60;;;;;;;;3525:6;3491:9;:21;3501:10;3491:21;;;;;;;;;;;;;;;:31;3513:8;3491:31;;;;;;;;;;;;;;;:40;;;;3567:8;3546:38;;3555:10;3546:38;;;3577:6;3546:38;;;;;;;;;;;;;;;;;;3601:4;3594:11;;3153:459;;;;;:::o;315:30::-;;;;:::o;2036:447::-;2188:12;2138:5;452:1:18;432:22;;:8;:22;;;;424:31;;;;;;;;2166:3:3;452:1:18;432:22;;:8;:22;;;;424:31;;;;;;;;2247:45:3;2255:9;:16;2265:5;2255:16;;;;;;;;;;;;;;;:28;2272:10;2255:28;;;;;;;;;;;;;;;;2285:6;2247:7;:45::i;:::-;2216:9;:16;2226:5;2216:16;;;;;;;;;;;;;;;:28;2233:10;2216:28;;;;;;;;;;;;;;;:76;;;;2321:33;2329:9;:16;2339:5;2329:16;;;;;;;;;;;;;;;;2347:6;2321:7;:33::i;:::-;2302:9;:16;2312:5;2302:16;;;;;;;;;;;;;;;:52;;;;2381:31;2389:9;:14;2399:3;2389:14;;;;;;;;;;;;;;;;2405:6;2381:7;:31::i;:::-;2364:9;:14;2374:3;2364:14;;;;;;;;;;;;;;;:48;;;;2443:3;2427:28;;2436:5;2427:28;;;2448:6;2427:28;;;;;;;;;;;;;;;;;;2472:4;2465:11;;465:1:18;2036:447:3;;;;;;:::o;92:45:11:-;;;;:::o;284:25:3:-;;;;;;;;;;;;;:::o;182:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;351:45::-;;;;;;;;;;;;;;;;;:::o;253:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1351:329::-;1456:12;1434:3;452:1:18;432:22;;:8;:22;;;;424:31;;;;;;;;1508:38:3;1516:9;:21;1526:10;1516:21;;;;;;;;;;;;;;;;1539:6;1508:7;:38::i;:::-;1484:9;:21;1494:10;1484:21;;;;;;;;;;;;;;;:62;;;;1573:31;1581:9;:14;1591:3;1581:14;;;;;;;;;;;;;;;;1597:6;1573:7;:31::i;:::-;1556:9;:14;1566:3;1556:14;;;;;;;;;;;;;;;:48;;;;1640:3;1619:33;;1628:10;1619:33;;;1645:6;1619:33;;;;;;;;;;;;;;;;;;1669:4;1662:11;;1351:329;;;;;:::o;402:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1239:130:18:-;1303:7;1335:2;1329;:8;;1322:16;;;;;;1360:2;1355;:7;1348:14;;1239:130;;;;:::o;870:152::-;934:7;953:9;970:2;965;:7;953:19;;994:2;989:1;:7;;982:15;;;;;;1014:1;1007:8;;870:152;;;;;:::o",
  "source": "pragma solidity ^0.4.17;\n\nimport \"./ERC20Token.sol\";\n\ncontract RSTToken is ERC20Token {\n    uint public INITIAL_SUPPLY = 1500000000000000;\n    \n    constructor() ERC20Token(\"TEST REGA Risk Sharing Token\", \"RST-T\", uint8(10)) public {\n        balanceOf[msg.sender] = INITIAL_SUPPLY;\n        totalSupply = INITIAL_SUPPLY;\n    }\n}",
  "sourcePath": "/Users/sergei/SimpleExchange/contracts/RSTToken.sol",
  "ast": {
    "absolutePath": "/Users/sergei/SimpleExchange/contracts/RSTToken.sol",
    "exportedSymbols": {
      "RSTToken": [
        4864
      ]
    },
    "id": 4865,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4835,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/Users/sergei/SimpleExchange/contracts/ERC20Token.sol",
        "file": "./ERC20Token.sol",
        "id": 4836,
        "nodeType": "ImportDirective",
        "scope": 4865,
        "sourceUnit": 1385,
        "src": "26:26:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4837,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1384,
              "src": "75:10:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$1384",
                "typeString": "contract ERC20Token"
              }
            },
            "id": 4838,
            "nodeType": "InheritanceSpecifier",
            "src": "75:10:11"
          }
        ],
        "contractDependencies": [
          1384,
          9653,
          9858
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4864,
        "linearizedBaseContracts": [
          4864,
          1384,
          9653,
          9858
        ],
        "name": "RSTToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4841,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 4864,
            "src": "92:45:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4839,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "92:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31353030303030303030303030303030",
              "id": 4840,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "121:16:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1500000000000000_by_1",
                "typeString": "int_const 1500000000000000"
              },
              "value": "1500000000000000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 4862,
              "nodeType": "Block",
              "src": "232:93:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4851,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1166
                        ],
                        "referencedDeclaration": 1166,
                        "src": "242:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4854,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4852,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10288,
                          "src": "252:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "252:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "242:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4855,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4841,
                      "src": "266:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "242:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4857,
                  "nodeType": "ExpressionStatement",
                  "src": "242:38:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4858,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1162
                      ],
                      "referencedDeclaration": 1162,
                      "src": "290:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4859,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4841,
                      "src": "304:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "290:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4861,
                  "nodeType": "ExpressionStatement",
                  "src": "290:28:11"
                }
              ]
            },
            "documentation": null,
            "id": 4863,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "544553542052454741205269736b2053686172696e6720546f6b656e",
                    "id": 4844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "173:30:11",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_499ef24263fef399030cacff361819c7ad54a8e4293c3b4c5a5c9ac1934ad383",
                      "typeString": "literal_string \"TEST REGA Risk Sharing Token\""
                    },
                    "value": "TEST REGA Risk Sharing Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "5253542d54",
                    "id": 4845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "205:7:11",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cb5c7fde28cc639597fb2681900864ae853c4b126d179f07698d1552f4c5563b",
                      "typeString": "literal_string \"RST-T\""
                    },
                    "value": "RST-T"
                  },
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 4847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "220:2:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 4846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "214:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": "uint8"
                    },
                    "id": 4848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "214:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 4849,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4843,
                  "name": "ERC20Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1384,
                  "src": "162:10:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1384_$",
                    "typeString": "type(contract ERC20Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "162:62:11"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "159:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 4850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "232:0:11"
            },
            "scope": 4864,
            "src": "148:177:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4865,
        "src": "54:273:11"
      }
    ],
    "src": "0:327:11"
  },
  "legacyAST": {
    "absolutePath": "/Users/sergei/SimpleExchange/contracts/RSTToken.sol",
    "exportedSymbols": {
      "RSTToken": [
        4864
      ]
    },
    "id": 4865,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4835,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/Users/sergei/SimpleExchange/contracts/ERC20Token.sol",
        "file": "./ERC20Token.sol",
        "id": 4836,
        "nodeType": "ImportDirective",
        "scope": 4865,
        "sourceUnit": 1385,
        "src": "26:26:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4837,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1384,
              "src": "75:10:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$1384",
                "typeString": "contract ERC20Token"
              }
            },
            "id": 4838,
            "nodeType": "InheritanceSpecifier",
            "src": "75:10:11"
          }
        ],
        "contractDependencies": [
          1384,
          9653,
          9858
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4864,
        "linearizedBaseContracts": [
          4864,
          1384,
          9653,
          9858
        ],
        "name": "RSTToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4841,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 4864,
            "src": "92:45:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4839,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "92:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31353030303030303030303030303030",
              "id": 4840,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "121:16:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1500000000000000_by_1",
                "typeString": "int_const 1500000000000000"
              },
              "value": "1500000000000000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 4862,
              "nodeType": "Block",
              "src": "232:93:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4851,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1166
                        ],
                        "referencedDeclaration": 1166,
                        "src": "242:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4854,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4852,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10288,
                          "src": "252:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "252:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "242:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4855,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4841,
                      "src": "266:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "242:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4857,
                  "nodeType": "ExpressionStatement",
                  "src": "242:38:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4858,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1162
                      ],
                      "referencedDeclaration": 1162,
                      "src": "290:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4859,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4841,
                      "src": "304:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "290:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4861,
                  "nodeType": "ExpressionStatement",
                  "src": "290:28:11"
                }
              ]
            },
            "documentation": null,
            "id": 4863,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "544553542052454741205269736b2053686172696e6720546f6b656e",
                    "id": 4844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "173:30:11",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_499ef24263fef399030cacff361819c7ad54a8e4293c3b4c5a5c9ac1934ad383",
                      "typeString": "literal_string \"TEST REGA Risk Sharing Token\""
                    },
                    "value": "TEST REGA Risk Sharing Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "5253542d54",
                    "id": 4845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "205:7:11",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cb5c7fde28cc639597fb2681900864ae853c4b126d179f07698d1552f4c5563b",
                      "typeString": "literal_string \"RST-T\""
                    },
                    "value": "RST-T"
                  },
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 4847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "220:2:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 4846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "214:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": "uint8"
                    },
                    "id": 4848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "214:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 4849,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4843,
                  "name": "ERC20Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1384,
                  "src": "162:10:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1384_$",
                    "typeString": "type(contract ERC20Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "162:62:11"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "159:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 4850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "232:0:11"
            },
            "scope": 4864,
            "src": "148:177:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4865,
        "src": "54:273:11"
      }
    ],
    "src": "0:327:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x10661c611de6769a46b7a22a09aa5b96b4df42c3",
      "transactionHash": "0x04b3a88693843fe45ea1dce4f6ac777c45fa6ade135c7eeb66139548d73788ad"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x4c2cbed6293507b97a3af66764488b276c3a19e2",
      "transactionHash": "0x28e2cb24e3bf5732884666c02e6abdcdc3279140c8789623561d2574b499a01e"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-09-15T13:07:30.820Z"
}